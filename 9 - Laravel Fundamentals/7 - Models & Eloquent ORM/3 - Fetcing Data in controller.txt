💾 STEP 3 — FETCHING DATA IN CONTROLLER
Let’s make a controller to display the students on a webpage.
Run this command:

php artisan make:controller StudentController

Now open the file:
app/Http/Controllers/StudentController.php

Replace everything with this:
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Student;

class StudentController extends Controller
{
    public function index()
    {
        $students = Student::all();
        return view('students.index', compact('students'));
    }
}

📘 What’s happening:

$students = Student::all(); → gets all students from the database.
return view('students.index', compact('students')); → sends them to the view file.

-------------------------------------------------------------------------
📜 STEP 4 — ADD ROUTE

Open:
routes/web.php

Add this line:
// Route for student page
use App\Http\Controllers\StudentController; // ✅ import the StudentController

Route::get('/students', [StudentController::class, 'index']); // Display all students



✅ This means:
When you go to /students in your browser, it will load the index() function in your StudentController.

----------------------------------------------------------
🎨 STEP 5 — CREATE THE VIEW FILE

Create a folder inside:
resources/views/students/

Then make a file:
index.blade.php

Add this code:

<!DOCTYPE html>
<html>
<head>
    <title>Students List</title>
</head>
<body>
    <h1>List of Students</h1>

    <table border="1" cellpadding="5">
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
        </tr>

        @foreach($students as $student)
        <tr>
            <td>{{ $student->id }}</td>
            <td>{{ $student->name }}</td>
            <td>{{ $student->email }}</td>
        </tr>
        @endforeach
    </table>
</body>
</html>


✅ Explanation:

@foreach loops through all student records.

{{ $student->name }} prints the name of each student.


------------------------------------------------------------------
▶️ STEP 6 — RUN YOUR APP

Start your Laravel server again:
php artisan serve

Go to:
http://127.0.0.1:8000/students

🎉 You’ll now see a table showing the list of students from your database!

📘 STEP 7 — INSERT DATA WITHOUT TINKER (OPTIONAL)

If you want to add new students through your controller, you can do this:

Student::create([
    'name' => 'Maria Clara',
    'email' => 'maria@gmail.com'
]);


Or make a form for adding new students later (we’ll learn CRUD in the next steps).

✅ SUMMARY
Task	Command / File	Description
Create model	php artisan make:model Student	Makes a model linked to a table
Add data	php artisan tinker → Student::create([...])	Insert data easily
Fetch data	$students = Student::all();	Get all data
Create controller	php artisan make:controller StudentController	Handles logic
Add route	/students → StudentController@index	Displays student list
Create view	resources/views/students/index.blade.php	Shows student data
🎯 KEY TAKEAWAYS

Model connects Laravel to a database table.

Eloquent ORM simplifies database operations.

You can insert, fetch, update, and delete data without SQL.

Controller handles the logic, and View displays it.